"use strict";(self.webpackChunkfenextjs_component=self.webpackChunkfenextjs_component||[]).push([[9454],{"./src/Input/Card/Number/_.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Index:()=>Index,__namedExportsOrder:()=>__namedExportsOrder,default:()=>_stories});var react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),esm_extends=__webpack_require__("./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/extends.js"),objectWithoutProperties=__webpack_require__("./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties.js"),Text=__webpack_require__("./src/Input/Text/index.tsx"),cjs=__webpack_require__("./node_modules/fenextjs-validator/cjs/index.js"),useValidator=__webpack_require__("./node_modules/fenextjs-hook/cjs/useValidator/index.js"),useData=__webpack_require__("./node_modules/fenextjs-hook/cjs/useData/index.js"),fenextjs_svg_cjs=__webpack_require__("./node_modules/fenextjs-svg/cjs/index.js"),fenextjs_functions_cjs=__webpack_require__("./node_modules/fenextjs-functions/cjs/index.js"),_excluded=["value","defaultValue","onChange","validator","maxNumberLength"],__jsx=react.createElement,InputCardNumberIcons={AMEX:__jsx(fenextjs_svg_cjs.SvgCardAmericanExpress,null),DINERS:__jsx(fenextjs_svg_cjs.SvgCardDinersClub,null),DINERS_CARTE_BLANCHE:__jsx(fenextjs_svg_cjs.SvgCardDinersClub,null),DISCOVER:__jsx(fenextjs_svg_cjs.SvgCardDiscover,null),JCB:__jsx(fenextjs_svg_cjs.SvgCardJCB,null),MASTERCARD:__jsx(fenextjs_svg_cjs.SvgCardMasterCard,null),OTHER:__jsx(react.Fragment,null),VISA:__jsx(fenextjs_svg_cjs.SvgCardVisa,null),VISA_ELECTRON:__jsx(fenextjs_svg_cjs.SvgCardVisaElectron,null)},InputCardNumber=function InputCardNumber(_ref){var valueProps=_ref.value,_ref$defaultValue=_ref.defaultValue,defaultValue=void 0===_ref$defaultValue?"":_ref$defaultValue,onChange=_ref.onChange,_ref$validator=_ref.validator,validator=void 0===_ref$validator?void 0:_ref$validator,_ref$maxNumberLength=_ref.maxNumberLength,maxNumberLength=void 0===_ref$maxNumberLength?19:_ref$maxNumberLength,props=(0,objectWithoutProperties.A)(_ref,_excluded),_useData=(0,useData.useData)(null!=defaultValue?defaultValue:"",{onChangeDataAfter:onChange}),data=_useData.data,setData=_useData.setData,value=(0,react.useMemo)((function(){return null!=valueProps?valueProps:data}),[valueProps,data]),errorFenext=(0,useValidator.useValidator)({data:value,validator:null!=validator?validator:(0,cjs.y)()}).error,ICON=(0,react.useMemo)((function(){return InputCardNumberIcons[(0,fenextjs_functions_cjs.GetCardType)(value)]}),[value]);return __jsx(react.Fragment,null,__jsx(Text.S,(0,esm_extends.A)({},props,{value:function numberToTextCard(e){var n="".concat(e).split(" ").join(""),first3=n.slice(0,4),secud3=n.slice(4,8),eighthDigit=n.slice(8,12),lastNumbers=n.slice(12,Math.max(15,maxNumberLength));return"".concat(null!=first3?first3:"").concat(secud3?" "+secud3:"").concat(eighthDigit?" "+eighthDigit:"").concat(lastNumbers?" "+lastNumbers:"")}(value),className:"fenext-input-card-number ".concat(null==props?void 0:props.className),useLoader:!1,error:errorFenext,icon:ICON,onChange:function onChange(v){setData("".concat(v).replace(/[^0-9]/g,"").slice(0,Math.max(15,maxNumberLength)))},inputMode:"numeric"})))};InputCardNumber.__docgenInfo={description:"",methods:[],displayName:"InputCardNumber",props:{maxNumberLength:{required:!1,tsType:{name:"number"},description:"The max length number card.\n@default 19\n@min 15",defaultValue:{value:"19",computed:!1}},defaultValue:{defaultValue:{value:'""',computed:!1},required:!1},validator:{defaultValue:{value:"undefined",computed:!0},required:!1}},composes:["Omit"]};var _stories_jsx=react.createElement;const _stories={title:"Input/Card/InputCardNumber",component:InputCardNumber};var Index=function Profile(args){return _stories_jsx(InputCardNumber,args,"Test Children")}.bind({});Index.args={label:"Label",placeholder:"Placeholder"},Index.parameters={...Index.parameters,docs:{...Index.parameters?.docs,source:{originalSource:"args => <InputCardNumber {...args}>Test Children</InputCardNumber>",...Index.parameters?.docs?.source}}};const __namedExportsOrder=["Index"]}}]);